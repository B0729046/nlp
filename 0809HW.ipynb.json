{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c30ea329",
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "\n",
    "infos = []\n",
    "for page1 in range(1, 3):\n",
    "    url = 'https://movies.yahoo.com.tw/moviegenre_result.html?genre_id=%s' % page1\n",
    "    for page2 in range(1, 2):\n",
    "        url += \"&page=%s\" % page2\n",
    "        r = requests.get(url)\n",
    "        soup = BeautifulSoup(r.text)\n",
    "\n",
    "        for d in soup.find_all('div', class_=\"release_info\"):\n",
    "            info = {}\n",
    "            url = d.find('div', class_='release_text').find('span')['data-url']\n",
    "            r = requests.get(url)\n",
    "            soup = BeautifulSoup(r.text)\n",
    "            for j in soup.find_all('div', class_=\"movie_intro_info _c\"):\n",
    "                info['中文名稱'] = j.find('h1').text.strip()\n",
    "                info['英文名稱'] = j.find('h3').text.strip()\n",
    "                info['類型'] = j.find('div', class_= 'level_name_box').find('a', class_ = 'gabtn').children.text.strip()\n",
    "            for k in soup.find_all('div', class_=\"gray_infobox_inner\"):    \n",
    "                info['劇情介紹'] = k.find('span', id=\"story\").text.strip()\n",
    "            for m in soup.find_all('div', class_=\"circlenum\"):    \n",
    "                info['期待度'] = m.find('span').text.strip()\n",
    "            infos.append(info)\n",
    "\n",
    "infos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "8474530b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: []\n",
       "Index: []"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 補充一：利用 DF 存取 / 另存成 CSV\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "df = pd.DataFrame(infos)\n",
    "df.to_csv('movies.csv', encoding='utf_8_sig')\n",
    "\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e1612a14",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
